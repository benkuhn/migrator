- test: Basic index
  before: |
    CREATE TABLE users (u_id SERIAL PRIMARY KEY, mobile TEXT NOT NULL);
  after: |
    CREATE TABLE users (u_id SERIAL PRIMARY KEY, mobile TEXT NOT NULL);
    CREATE INDEX users_mobile ON users (mobile);
  migration:
    message: "a migration"
    pre_deploy:
      - create_index:
          name: users_mobile
          table: public.users
          expr: mobile
  reverse:
    message: "a migration"
    post_deploy:
      - drop_index:
          name: users_mobile
          table: public.users
          expr: mobile
- test: Partial unique index
  before: |
    CREATE TABLE users (u_id SERIAL PRIMARY KEY, mobile TEXT NOT NULL);
  after: |
    CREATE TABLE users (u_id SERIAL PRIMARY KEY, mobile TEXT NOT NULL);
    CREATE UNIQUE INDEX users_mobile ON users (mobile) WHERE u_id > 0;
  migration:
    message: "a migration"
    pre_deploy:
      - create_index: &index
          unique: true
          name: users_mobile
          table: public.users
          expr: mobile
          where: (u_id > 0)
  reverse:
    message: "a migration"
    post_deploy:
      - drop_index:
          <<: *index
- test: CHECK constraint
  before: |
    CREATE TABLE users (u_id SERIAL PRIMARY KEY, mobile TEXT NOT NULL);
  after: |
    CREATE TABLE users (
      u_id SERIAL PRIMARY KEY,
      mobile TEXT NOT NULL
      CONSTRAINT users_check CHECK (mobile LIKE '+%')
    );
  migration:
    message: "a migration"
    pre_deploy:
      - add_constraint: &check-constraint
          name: users_check
          table: public.users
          check: (mobile ~~ '+%'::text)
  reverse:
    message: "a migration"
    post_deploy:
      - drop_constraint:
          <<: *check-constraint
- test: FOREIGN KEY constraint
  before: |
    CREATE TABLE users (u_id SERIAL PRIMARY KEY, parent_id INT);
  after: |
    CREATE TABLE users (
      u_id SERIAL PRIMARY KEY, parent_id INT REFERENCES users (u_id)
    );
  migration:
    message: "a migration"
    pre_deploy:
      - add_constraint: &fkey-constraint
          name: users_parent_id_fkey
          table: public.users
          foreign_key: parent_id
          references: public.users (u_id)
  reverse:
    message: "a migration"
    post_deploy:
      - drop_constraint:
          <<: *fkey-constraint
- test: Rename columns
  before: |
    CREATE TABLE users (
      u_id SERIAL PRIMARY KEY,
      mobile TEXT,
      email TEXT
    );
  after: |
    CREATE TABLE users (
      user_id SERIAL PRIMARY KEY,
      mobile TEXT,
      email_renamed TEXT
    );
  test_during_deploy: |
    insert into users (mobile, email) values ('+1', 'foo@bar.com');
    BEGIN;
      SELECT set_config('search_path', 'migrator_rev_0,'||current_setting('search_path'), true);
      INSERT INTO users (mobile, email_renamed) values ('+2', 'bar@foo.com');
      SELECT user_id, mobile, email_renamed FROM users;
    END;
    SELECT u_id, mobile, email FROM users;
  migration:
    message: "a migration"
    pre_deploy:
      - begin_rename: &rename
          table: users
          renames:
            u_id: user_id
            email: email_renamed
    post_deploy:
      - finish_rename:
          <<: *rename
      - run_ddl:
          up: ALTER SEQUENCE users_u_id_seq RENAME TO users_user_id_seq
          down: ALTER SEQUENCE users_user_id_seq RENAME TO users_u_id_seq
  test_codegen: false
